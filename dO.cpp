// dO.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <cstdlib> // для system
#include <iostream>
/*!
@mainpage
\brief Программа предназначена для работы с двумерным динамическим массивом.
\details Функции:
- Ввод размера массива;
- Ввод элементов массива:
-# Вручную;
-# С помощью генератора случайных чисел;
- Обработка массива:
-# Поиск максимального и минимального элементов массива
-# Обнуление строки с наименьшим элементом
-# Удаление столбца с максимальным элементом
- Вывод массива на экран.
@author Шмаков Алексей
@date 01.01.2017.
\version 1.0
@warning Программа создавалась в среде разработки Visual Studio, поэтому её корректная работа в других IDE не гарантируется.
*/
using namespace std;
void Pe(int **Mas, int f, int t)
{
	/*!
	Функция вывода на экран массива
	\param [in] Mas двумерный динамический массив
	\param [in] f количество строк в массиве
	\param [in] t количество столбцов в массиве
	*/
	int i, g;
	system("CLS");
	printf("Вы выбрали пятый пункт\r\n");
	for (i = 0; i < f; i++)
	{
		for (g = 0; g < t; g++)
		{
			printf("%-4d ", Mas[g][i]);
		}
		printf("\r\n");
	}
	printf("Нажмите на любую клавишу чтобы перейти обратно в меню\r\n");
}

int **Pd(int **Mas, int* f, int* t)
{
	/*!
	Функция обработки массива:
	- Поиск максимального и минимального элементов массива
	- Обнуление строки с наименьшим элементом
	- Удаление столбца с максимальным элементом
	\param [in] Mas двумерный динамический массив
	\param [in] f количество строк в массиве
	\param [in] t количество столбцов в массиве
	\param [out] Mas двумерный динамический массив
	\return двумерный динамический массив после обработки.
	*/
	int i, g;
	system("CLS");
	printf("Вы выбрали четвертый пункт\r\n");
	int r = *f, w = *t;
	int i1 = 0; int g1 = 0;//Координаты наименьшего элемента
	int i2 = 0; int g2 = 0;//Координаты наибольшего элемента
	for (i = 0; i < r; i++)
	{
		for (g = 0; g < w; g++)
		{
			if ((Mas[g][i] < Mas[g1][i1]) && (i != 0) && (g != 0))
			{
				i1 = i;
				g1 = g;
			}
			else if ((Mas[g][i]>Mas[g2][i2]) && (i != 0) && (g != 0))
			{
				i2 = i;
				g2 = g;
			}
		}
	}
	printf("Максимальное число [%d][%d],Минимальное число [%d][%d]", i2, g2, i1, g1);
	for (g = 0; g < r; g++)
	{
		Mas[g][i1] = 0;
	}
	for (g = g2; g < r - 1; g++)
		Mas[g] = Mas[g + 1];
	r = r - 1;
	*f = r; *t = w;
	return Mas;

}
int **Pc(int **Mas, int t)
{
	/*!
	Функция ручного ввода значения элементов массива
	\param [in] Mas двумерный динамический массив
	\param [in] t размер массива
	\param [out] Mas двумерный динамический массив
	\return двумерный динамический массив с введенными значениями элементов.

	\about Ввод значений элементов массива с клавиатуры:
	\code
	for (i = 0; i < t; i++)
	{
		for (g = 0; g < t; g++)
		{
			printf("Введите C[%d][%d]=", g, i);
			scanf_s("%d", &Mas[g][i]);
			printf("\r\n");
		}
	}
	\endcode
	*/
	int i, g;
	system("CLS");
	printf("Вы выбрали третий пункт\r\n");
	for (i = 0; i < t; i++)
	{
		for (g = 0; g < t; g++)
		{
			printf("Введите C[%d][%d]=", g, i);
			scanf_s("%d", &Mas[g][i]);
			printf("\r\n");
		}
	}
	return Mas;
}
int **Pb(int **Mas, int t)
{
	/*!
	Функция автоматического ввода значения элементов массива
	\param [in] Mas двумерный динамический массив
	\param [in] t размер массива
	\param [out] Mas двумерный динамический массив
	\return двумерный динамический массив с введенными значениями элементов.

	\about Автоматическое присваивание значений элементам массива:
	\code
	for (i = 0; i < t; i++)
	{
	for (g = 0; g < t; g++)
	{
	Mas[g][i] = rand() % 101 - 50;
	}
	}
	\endcode
	*/
	int i, g;
	system("CLS");
	printf("Вы выбрали второй пункт\r\n");
	for (i = 0; i < t; i++)
	{
		for (g = 0; g < t; g++)
		{
			Mas[g][i] = rand() % 101 - 50;
		}
	}

	printf("Матрица автоматически набрана размером %d*%d\r\nНажмите на любую клавишу чтобы перейти обратно в меню\r\n", t, t);
	return Mas;
}
int **Pa(int **Mas, int* f)
{
	/*!
	Функция ввода размерности массива
	\param [in] Mas двумерный динамический массив
	\param [in] f размер массива
	\param [in] r указатель на размер массива
	\param [out] Mas двумерный динамический массив
	\return Пустой двумерный динамический массив и его размерность (с помощью указателя).

	\about Выделение памяти под размер массива:
	\code
	Mas = new int*[r];
	for (g = 0; g < r; g++)
	{
	Mas[g] = new int[r];
	}
	\endcode

	@warning В случае ввода r<=0 программа выдает оповощение и требует заново ввести значение переменной r.
	*/
	int g, r = *f;
	system("CLS");
	printf("Вы выбрали первый пункт.\r\nВведите размер квадратной матрицы\r\n");
	r = 0;
	while (r <= 0)
	{
		scanf_s("%d", &r);
		if (r <= 0)
			printf("Вы ввели не правильно. Скорее всего ваше число отрицательное или 0.\r\nВведите заново размер массива\r\n");
	}
	*f = r;
	Mas = new int*[r];
	for (g = 0; g < r; g++)
	{
		Mas[g] = new int[r];
	}
	printf("%d\r\n", r);
	return Mas;
}
void Menu()
{
	/*!
	Основная функция отвечающая за меню
	\param n количество столбцов в массиве
	\param m количество строк в массиве
	\param a переменная выбора пункта меню
	\param C двумерный динамический массив
	@warning При a от 1 до 6 программа выбирает соответствующее действие
	*/
	int n = 0, m, a = 0; int **C = 0;
	while (a != 6)
	{
		printf("Меню:\r\n1)Ввод размера квадратной матрицы\r\n2)Автоматическое заполнение матрицы\r\n3)Заполнение матрицы вручную\r\n4)Обработка матрицы\r\n5)Вывод матрицы на печать\r\n6)Выход из программы\r\n Для выбора элемента нажмите на соотвествующую кнопку\r\n");
		scanf_s("%d", &a);
		switch (a)
		{
		case 1:
			C = Pa(C, &n);
			printf("2) %d\r\n", n);
			m = n;
			break;
		case 2:
			C = Pb(C, n);
			m = n;
			break;
		case 3:
			C = Pc(C, n);
			m = n;
			break;
		case 4:
			C = Pd(C, &m, &n);
			break;
		case 5:
			Pe(C, n, m);
			break;
		case 6:
			break;
		default:
			system("CLS");
			printf("Вы выбрали не существующий пункт\r\nНажмите на любую клавишу чтобы перейти обратно в меню\r\n");
			getchar();
			getchar();
			break;
		}
	}
}



int main()
{
	/*!
	Основная программа
	Функции:
	- Инициализация Русского языка
	- Приветствие
	- Запуск Функции Меню
	*/
	setlocale(LC_ALL, "Russian"); //создание русской локализации
	printf("Добро пожаловать в программу обнуления строки с наименьшим элеметом и удалением столбца с максимальным элементом.\r\nНажмите любую клавишу чтобы продолжить\r\n");
	Menu();
	return 0;
}
